# Server
server.port=8080

# Docker profile properties (use in docker-compose via SPRING_PROFILES_ACTIVE=docker)
spring.datasource.url=jdbc:postgresql://postgres:5432/splitdb
spring.datasource.username=splituser
spring.datasource.password=splitpass
spring.datasource.driver-class-name=org.postgresql.Driver

# Flyway config (safe defaults)
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

# Kafka (in-compose resolves to service name)
spring.kafka.bootstrap-servers=kafka:9092

# Google JWKS for resource server JWT validation
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${GOOGLE_JWK_SET_URI:https://www.googleapis.com/oauth2/v3/certs}

# OAuth2 client registration (read client id/secret from env)
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_CLIENT_SCOPE:openid,profile,email}

# Optional provider issuer (useful for strict issuer validation)
spring.security.oauth2.client.provider.google.issuer-uri=${GOOGLE_ISSUER_URI:https://accounts.google.com}

# Actuator & health
management.endpoints.web.exposure.include=health,info,metrics,env,prometheus
management.endpoint.prometheus.enabled=true
management.endpoint.health.show-details=when-authorized

# Logging Configuration
logging.aspect.enabled=true
logging.aspect.default-warn-threshold-ms=500
logging.aspect.include-args=false
logging.aspect.include-result=false
logging.level.root=${LOG_LEVEL_ROOT:INFO}
logging.level.com.kleadingsolutions.expenseshare=DEBUG
logging.level.org.springframework=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} [%X{requestId}] - %msg%n